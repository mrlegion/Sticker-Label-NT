<Page x:Class="StickerLib.UI.Views.Pages.MainView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:converters="clr-namespace:StickerLib.UI.Common.Converters"
      xmlns:helpers="clr-namespace:StickerLib.UI.Common.Helpers"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      Background="{DynamicResource MaterialDesignPaper}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="14"
      FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
      mc:Ignorable="d"
      DataContext="{Binding Main, Source={StaticResource Locator}}"
      d:DesignHeight="700" d:DesignWidth="1280">
    <Page.Resources>
        <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        
        <!--основной список ярлыков-->
        <ListView Grid.Column="0"
                  x:Name="StickerListView"
                  ItemsSource="{Binding FilteredItems, UpdateSourceTrigger=PropertyChanged}"
                  SelectionMode="Multiple"
                  helpers:ListViewHelper.SelectedItems="{Binding SelectedItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Style="{StaticResource MaterialDesignAccentCheckBox}"
                                  Margin="0 0 15 0"
                                  VerticalAlignment="Center"
                                  IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                  Height="30" />
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}"
                                   VerticalAlignment="Center" 
                                   Text="{Binding Name, Mode=OneWay}"/>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!--основные настройки для сборки ярлыков-->
        <DockPanel Grid.Column="1" Width="500" Margin="40 20 20 10" >
            <Grid DockPanel.Dock="Top" VerticalAlignment="Top" Margin="0 0 0 20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2.5*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBox md:HintAssist.Hint="Typo search sticker name"
                         Grid.Column="0"
                         Grid.Row="0"
                         VerticalAlignment="Bottom"
                         Margin="0 0 20 15"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         Text="{Binding SearchName, UpdateSourceTrigger=PropertyChanged}">
                </TextBox>

                <ComboBox Grid.Column="1"
                          Grid.Row="0"
                          Margin="0 0 0 15"
                          IsSynchronizedWithCurrentItem="True"
                          md:HintAssist.Hint="Count"
                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          SelectedItem="{Binding Count, Mode=OneWayToSource}"
                          ItemsSource="{Binding CountList, Mode=OneWay}"
                          IsEnabled="{Binding ElementName=IsCustomCount, Path=IsChecked, Converter={StaticResource InverseBoolConverter}}"
                          HorizontalAlignment="Stretch" />

                <CheckBox Content="Use custom count for stickers?"
                          x:Name="IsCustomCount"
                          Grid.Column="0"
                          Grid.Row="1"
                          DockPanel.Dock="Top" />

                <TextBox md:HintAssist.Hint="Enter custom count"
                         Grid.Column="1"
                         Grid.Row="1"
                         Text="{Binding Count, Mode=TwoWay}"
                         IsEnabled="{Binding ElementName=IsCustomCount, Path=IsChecked}" />
            </Grid>

            <Button DockPanel.Dock="Top"
                    Content="Add to group"
                    ToolTip="Add selected sticker to group"
                    Command="{Binding AddGroupCommand, Mode=OneWay}"
                    CommandParameter="{Binding ElementName=StickerListView}"
                    Margin="0 0 0 30" 
                    VerticalAlignment="Top"/>

            <DataGrid DockPanel.Dock="Top" Width="Auto"
                      ItemsSource="{Binding Groups, UpdateSourceTrigger=PropertyChanged}"
                      Style="{StaticResource DataGridBase}"
                      md:DataGridAssist.CellPadding="13 8 8 8"
                      md:DataGridAssist.ColumnHeaderPadding="8">
                <DataGrid.Columns>
                    <md:MaterialDataGridTextColumn Binding="{Binding Name}"
                                                   Header="Group name"
                                                   FontWeight="SemiBold"
                                                   Width="2.5*"/>
                    <md:MaterialDataGridTextColumn Binding="{Binding StickerCountInGroup}"
                                                   Header="Count"
                                                   FontWeight="SemiBold"
                                                   Width=".7*"/>
                    <DataGridTemplateColumn Header="Control" Width="1*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Style="{StaticResource MaterialDesignToolButton}" 
                                            Height="Auto"
                                            Padding="5 0"
                                            Command="{Binding DataContext.ViewGroupCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=SelectedItem}">
                                        <md:PackIcon Kind="Eye"/>
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignToolButton}" 
                                            Height="Auto"
                                            Padding="5 0"
                                            Command="{Binding DataContext.EditGroupCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=SelectedItem}">
                                        <md:PackIcon Kind="Edit"/>
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignToolButton}"
                                            Height="Auto"
                                            Padding="5 0"
                                            Command="{Binding DataContext.DeleteGroupCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=SelectedItem}">
                                        <md:PackIcon Kind="Delete"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <UniformGrid Columns="3"
                         DockPanel.Dock="Bottom"
                         VerticalAlignment="Bottom">
                <Button Command="{Binding ClearAllCommand, Mode=OneWay}"
                        CommandParameter="{Binding ElementName=StickerListView}"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Content="Clear all" />
                <Button Command="{Binding CollectFileCommand, Mode=OneWay}"
                        Content="Collects files" />
            </UniformGrid>

            <StackPanel Orientation="Vertical"
                        DockPanel.Dock="Bottom"
                        VerticalAlignment="Bottom"
                        Margin="0 10 0 20">
                <CheckBox Content="Use shuffle for stickers" 
                          Margin="0 5"
                          IsChecked="{Binding UseShuffle}"/>
                <CheckBox Content="Cut and stack stickers for print page"
                          IsChecked="{Binding ToPrintPage}"/>
            </StackPanel>
        </DockPanel>
    </Grid>
</Page>
